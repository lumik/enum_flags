services:
  - docker

# It is not really needed, other than for showing correct language tag in Travis CI build log.
language: cpp

before_install:
  - docker run -d --name ci -v $(pwd):/home/travis/build/$TRAVIS_REPO_SLUG ubuntu:bionic tail -f /dev/null
  - docker ps

install:
  - docker exec -t ci bash -c "apt-get update;
    apt-get install -y build-essential libgtest-dev valgrind cmake python wget"
  - docker exec -t ci bash -c "cd /home/travis/build && wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz"
  - docker exec -t ci bash -c "cd /home/travis/build && tar xf release-1.8.0.tar.gz"
  - docker exec -t ci bash -c "cd /home/travis/build/googletest-release-1.8.0/googletest && mkdir -p build"
  - docker exec -t ci bash -c "cd /home/travis/build/googletest-release-1.8.0/googletest/build && cmake -DBUILD_SHARED_LIBS=ON .."
  - docker exec -t ci bash -c "cd /home/travis/build/googletest-release-1.8.0/googletest/build && make"
  - docker exec -t ci bash -c "cp -a /home/travis/build/googletest-release-1.8.0/googletest/include/gtest /usr/local/include"
  - docker exec -t ci bash -c "cp -a /home/travis/build/googletest-release-1.8.0/googletest/build/*.so /usr/local/lib"
  - docker exec -t ci bash -c "echo \"/usr/local/lib\" > /etc/ld.so.conf.d/google-test.conf"
  - docker exec -t ci bash -c "ldconfig"

script:
  - docker exec -t ci bash -c "c++ --version"
  - docker exec -t ci bash -c "cd /home/travis/build/$TRAVIS_REPO_SLUG && make test"
  - docker exec -t ci bash -c "cd /home/travis/build/$TRAVIS_REPO_SLUG && make check-cpplint"
